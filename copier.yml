_templates_suffix: .jinja  # template files suffix
_subdirectory: template  # template root directory
# unsafe, need to use with copier source_url dst_path --trust
_jinja_extensions:
- copier_templates_extensions.TemplateExtensionLoader
- copier_extensions.py:CurrentYearExtension
- copier_extensions.py:GitExtension
- copier_extensions.py:SlugifyExtension

# questions
cpy_project_name:
    type: str
    help: What is your project name(e.g. CCGO ) ?
    validator: >-
        {% if not (cpy_project_name | regex_search('^[a-zA-Z][a-zA-Z0-9\-]+$')) %}
        cpy_project_name must start with a letter, followed one or more letters, digits or dashes.
        {% endif %}

cpy_project_relative_path:
    type: str
    help: What is your project relative path(e.g. {{ cpy_project_name|lower }}) ?
    default: "{{ cpy_project_name|lower }}"
    validator: >-
        {% if not (cpy_project_relative_path | regex_search('^[a-zA-Z][a-zA-Z0-9\-]+$')) %}
        cpy_project_relative_path must start with a letter, followed one or more letters, digits or dashes.
        {% endif %}

cpy_project_version:
    type: str
    help: What is your project version(e.g. 1.0.0) ?
    default: 1.0.0
    validator: '{%- if not cpy_project_version %}project version cannot be empty{%- endif %}'

cpy_project_group_id:
    type: str
    help: What is your project GroupID(e.g. com.{{ git_user_email().split('@')[1].split('.')[0] if '@' in git_user_email() and '.' in git_user_email() .split('@')[1] else 'ccgo' }}.{{ cpy_project_name|lower }}) ?
    default: "com.{{ git_user_email().split('@')[1].split('.')[0] if '@' in git_user_email() and '.' in git_user_email() .split('@')[1] else 'ccgo' }}.{{ cpy_project_name|lower }}"
    validator: '{%- if not cpy_project_group_id %}project group id cannot be empty{%- endif %}'

cpy_project_dependencies:
    type: str
    help: What is your project dependencies(e.g. com.ccgo.sample:sample:1.0.0,com.ccgo.lib:lib:2.0.0) ?
    default: EMPTY

cpy_user_name:
  type: str
  help: What is your git user name(e.g {{ git_user_name() }}) ?
  default: "{{ git_user_name() }}"
  validator: '{%- if not cpy_user_name %}user name cannot be empty{%- endif %}'

cpy_user_email:
  type: str
  help: What is your git user email(e.g. {{ git_user_email() }}) ?
  default: "{{ git_user_email() }}"
  validator: '{%- if not cpy_user_email %}user email cannot be empty{%- endif %}'

cpy_git_base_host:
  type: str
  help: What is your git base host(e.g. github.com) ?
  default: "github.com"
  validator: '{%- if not cpy_git_base_host %}git base host cannot be empty{%- endif %}'

cpy_git_repo_url:
  type: str
  help: What is your git repository url(e.g. {{ 'git@' ~ cpy_git_base_host ~ ':' ~ cpy_user_name ~ '/' ~ cpy_project_group_id.split('.')|last ~ '-' ~ cpy_project_name|lower ~ '.git' }}) ?
  default: "{{ 'git@' ~ cpy_git_base_host ~ ':' ~ cpy_user_name ~ '/' ~ cpy_project_group_id.split('.')|last ~ '-' ~ cpy_project_name|lower ~ '.git' }}"
  validator: '{%- if not cpy_git_repo_url %}git repo url cannot be empty{%- endif %}'

cpy_document_url:
  type: str
  help: What is your document url(e.g. https://{{ cpy_project_group_id.split('.')|last }}-{{ cpy_project_name|lower ~ '.pages.' ~ cpy_git_base_host }}) ?
  default: "https://{{ cpy_project_group_id.split('.')|last }}-{{ cpy_project_name|lower ~ '.pages.' ~ cpy_git_base_host }}"

cpy_with_include_src_tests:
  type: bool
  help: Do you want to include src and tests directories?
  default: True


_message_after_copy: |
    ===============================
    Your project "{{ cpy_project_name }}" has been created by CCGO template successfully!

    Next steps:

    1. Change directory to the project root:

       $ cd {{ _copier_conf.dst_path }}

    2. Read "README.md" and start coding.

    3. Enable lint check:

       $ cd {{ cpy_project_relative_path }}
       $ git submodule update --init --recursive
       $ lint/install.sh cpp

    4. If you want to update the project, run the following command:

       $ copier update

    ===============================

_message_before_copy: |
    ===============================
    Thanks for generating a project using CCGO template.

    You'll be asked a series of questions whose answers will be used to
    generate a tailored project for you.
    ===============================

_message_after_update: |
    ===============================
    Your project "{{ cpy_project_name }}" has been updated by CCGO template successfully!
    In case there are any conflicts, please resolve them. Then,
    you're done.
    ===============================

_skip_if_exists:
- "{{ _subdirectory }}/CHANGELOG.md"
- "{{ _subdirectory }}/build_config.py"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/android/"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/benches/"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/src/"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/include/"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/samples/"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/docs/Doxyfile.in"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/docs/Doxyfile.zh-cn.in"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/tests/"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/third_party/"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/build_config.py"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/CMakeConfig.local.cmake"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/local.properties"
- "{{ _subdirectory }}/{{ cpy_project_relative_path }}/CNAME"

_exclude:
- copier_extensions.py
- copier.yml
- copier.yaml
- .git
- .svn
- .gradle
- __pycache__
- "*.py[co]"
- "*~"
- .DS_Store

# unsafe, need to use with copier source_url dst_path --trust
_tasks:
  - |
    set -Eeuo pipefail
    if ! [ -d '.git' ]; then
      git init --initial-branch=master
      git remote add origin {{ cpy_git_repo_url }}
      git add .
      git commit -m "feat: Initial commit"
    fi
